from os import *
from sys import *
from collections import *
from math import *

from sys import stdin
def func(i,nums,dp):
    dp[0]=nums[0]
    neg=0
    for i in range(1,n):
        take=nums[i]
        if i>1:
            take+=dp[i-2]
            
        nt=0+dp[i-1]
        dp[i]=max(take,nt)
    return dp[i]


    




def maximumNonAdjacentSum(nums):    
    # Write your code here.
    pass
    n=len(nums)
    dp=[-1]*n
    return func(n-1,nums,dp)

# Main.
t = int(stdin.readline().rstrip())

while t > 0:
    
    n = int(stdin.readline().rstrip())
    arr = list(map(int, stdin.readline().rstrip().split(" ")))
    print(maximumNonAdjacentSum(arr))
    
    t -= 1
